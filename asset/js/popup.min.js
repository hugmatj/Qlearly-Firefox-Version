'use strict';

var liSelected;
var li;
var Popup = function() {

    var defaults = {
      container: ''
    }

    if (arguments && typeof arguments === "object") {

      this.options = extendDefaults(defaults, arguments[0]);

    }

	function extendDefaults(source, properties) {
	    var property;
	    for (property in properties) {
	      if (properties.hasOwnProperty(property)) {
	        source[property] = properties[property];
	      }
	    }
	    return source;
	}

	this.close = function() {
		this.options.container.style.display = 'none';
	}

	this.open = function() {
		this.options.container.style.display = 'block';
	}
};

let defaultPopup = new Popup({
	container: document.getElementById('default_view_container')
});

let pop_choose_board = document.getElementById('pop_choose_board');
 
let pop_save_session = document.getElementById('pop_save_session_btn');

let pop_save_current_tab = document.getElementById('pop_save_current_tab');

pop_save_session.onclick = function(element){

	let boardId = $('#pop_choose_board');
	let columnid = $('[name="columnid"]:checked');

	if(boardId.val() == "no_board") {
		alert('Please create board to save the entry');
		return false;
	}

	var lastIndex = entry.lastSortable(columnid.val());

	chrome.tabs.query({ pinned: true, currentWindow: true}, function(pinnedTabs){

		chrome.tabs.query({ pinned: false, currentWindow: true}, function(tabs){

			var alltabs = tabs;
			if(chrome.extension.getBackgroundPage().savePinnedTab()) {
				
				alltabs = pinnedTabs.concat(tabs);
			}

			var allEntries = [];
			alltabs.forEach(function(tab){

				if (!tab.url || tab.url == 'chrome://newtab/' || tab.url.search(new RegExp(currentExtUrl, 'i')) > -1) {
					return false;
				}
				
				lastIndex++;
				var entryObj = entry.create({
		       		board_id: boardId.val(),
					column_id: columnid.val(),
					title: tab.title,
					url: tab.url,
					favIconUrl: tab.favIconUrl,
					sortable: lastIndex
				})

				if(entryObj) { 
		       		allEntries.push(entryObj);
				}
				
		       	if(localStorage.getItem("tab_status_on_save") == "true") {
		       		chrome.tabs.remove(tab.id);
		       	}
		    	pop.updateColumnTpl(columnid.val());
			});
			if(allEntries.length > 0) {
				setTimeout(function() {
					service.createOrUpdateMultipleEntry(allEntries);
				}, 400);

				var uid = guid();

				$('#message').append(flashComponent({
		    		id: uid, 
		    		title: "Successfully Saved", 
		    		type : "new_entry", 
		    		afterUndo: function() {
		    			pop.updateColumnTpl(columnid.val());		
		    		}
		    	}));

		    	restorableRecord['new_entry_' + uid] = allEntries;
			}

			$('.' + columnid.val()).addClass('saved');

			if(localStorage.getItem("tab_status_on_save") == "true") {
				chrome.tabs.create({url: chrome.extension.getURL('board-detail.html')});

				tabs.forEach(function(tab){
					chrome.tabs.remove(tab.id);
				});
			}

		});
	});

};


pop_save_current_tab.onclick = function(element){

	let boardId = $('#pop_choose_board');
	let columnid = $('[name="columnid"]:checked');

	if(boardId.val() == "no_board") {
		alert('Please create board to save the entry');
		return false;
	}

	chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {

		if(tabs[0]) {			
	        var entryObj = entry.create({
	       		board_id: boardId.val(),
				column_id: columnid.val(),
				title: tabs[0].title,
				url: tabs[0].url,
				favIconUrl: tabs[0].favIconUrl
			});
	       	if(localStorage.getItem("tab_status_on_save") == "true") {
	       		chrome.tabs.remove(tabs[0].id);
	       	}
	       	service.createOrUpdateEntry(entryObj.id);
	    	pop.updateColumnTpl(columnid.val());
	    	$('.' + columnid.val()).addClass('saved');

	    	$('#message').append(flashComponent({
	    		id: entryObj.id, 
	    		title: 'Successfully Saved', 
	    		type : "new_entry",
	    		afterUndo: function() {
	    			pop.updateColumnTpl(columnid.val());		
	    		}
	    	}));

	    	restorableRecord['new_entry_' + entryObj.id] = [ entryObj ];
		}
	});	

};


 

let pop_open_qlearly = document.getElementById('pop_open_qlearly_btn');

pop_open_qlearly.onclick = function(element){

	chrome.tabs.create({url: chrome.extension.getURL('index.html')})

};



board.renderOuterMenu();

const pop = {
	render: function() {

		$('#pop_column_list').html('');
		let popColumn = (board.column(currentBoard.id));

		if(popColumn.length <= 0) {
			$('#pop_column_list').html('<p class="text-center"> <br /><br />Oops! Lookes like there are no column in the board, Please create a new column</p>');
		}

		let selected = 'checked="checked"';
		popColumn.forEach(eitem => {

			if(eitem.type === 'rss') {
		   		return false;
		   	}

			let entryTitle = `${entry.count(eitem.id)} Entry`;
		   	if(entry.count(eitem.id) > 1) {
		   		entryTitle = `${entry.count(eitem.id)}&nbsp;Entries`;
		   	}
			let btn = $(`
				<div>
					<a class="${eitem.id} column-container" href="#">				
						<input type="radio" name="columnid" value="${eitem.id}" ${selected} >
							<svg class="checkmark " xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
							<polyline fill="none" stroke="#7b7676" stroke-width="5" stroke-linecap="round" stroke-miterlimit="10" points="36.063,2.5   13.411,29.621 2.5,19.229 "/>
							</svg>

				   		<div><div class="headnew" style="flex:1"> ` + eitem.name + `</div><div class="float-right" style="text-align:center;"><small class="count size12">${entryTitle}</small><br><button style="width:auto;" class="btn btn-sm btn-success noBorderRadius open-all">Open All</button></div></div>
				   	</a>				   	
			   	</div>
		   	`);

		   	// <div class="text-right controls saperatelink ">
				  //  		<a class="link-hover edit"><img src="asset/image/pencil_icon.png"></a>
				  //  	</div>


			$('#pop_column_list').append(btn);

			btn.click(function(){
				$(this).removeClass('saved');
			});

			// btn.find('.edit').click(function(){
			// 	btn.find('.column-container').hide();
			// });

			btn.find('.open-all').click(function(){
				entry.getByColumn(eitem.id).forEach(item => {
					chrome.tabs.create({url: item.url });
				});
			});
			selected = '';
		});
	}, 
	updateColumnTpl: function(columnid) {

		if(entry.count(columnid) > 1) {
			$('#pop_column_list').find('.' + columnid).find('.count').html(
				`${entry.count(columnid)}&nbsp;Entries`
			);
		} else {
			$('#pop_column_list').find('.' + columnid).find('.count').html(
				`${entry.count(columnid)}&nbsp;Entry`
			);
		}
	}

};

$(document).ready(function(){

	pop.render();


	$('#pop_choose_board').change(function(){
		if(this.value == 'new_board') {
			var obj = board.create({ name: 'Unnamed Board', folder_id: folder.get()[0].id });
			board.renderOuterMenu();
			this.value = obj.id;
		}
		RSStorage.setCurrentBoardId(this.value);
		currentBoard.id = this.value;
		pop.render();

	});

	

	$('#pop_search_box').keyup(function(evt){

		let filter = (this.value).toUpperCase();	

		var selected;
		var next;

		if(evt.keyCode == 40) {
			
			li = $('#pop_column_list').find('.entry-block');
			
			if(liSelected) {
				next = liSelected.next();
				if(next.length > 0){
					liSelected.removeClass('selected-entry');
				    liSelected = next.addClass('selected-entry');
				    selected = next;
				}else{
				    liSelected = li.eq(0);
					li.eq(0).addClass('selected-entry');
			    	selected = li.eq(0);
				}

			} else {
				liSelected = li.eq(0);
				li.eq(0).addClass('selected-entry');
			    selected = li.eq(0);
			}

			$('#pop_search_box').val(selected.find('.entryTitle').html());
			return;
		} else if(evt.keyCode == 38) {
			
			li = $('#pop_column_list').find('.entry-block');

			if(liSelected){
	            liSelected.removeClass('selected-entry');
	            next = liSelected.prev();
	            if(next.length > 0){
	                liSelected = next.addClass('selected-entry');
	                selected = next;

	            }else{

	                liSelected = li.last().addClass('selected-entry');
	                selected = li.last();
	            }
	        }else{

	            liSelected = li.last().addClass('selected-entry');
	            selected = li.last();
	        }

	        $('#pop_search_box').val(selected.find('.entryTitle').html());
			$('#pop_search_box').focus();

			return;
		} 
		if(evt.keyCode == 13) {
			if(liSelected) {
				liSelected.find('.fullLi').trigger('click');
			}
		}
		if(!filter) {
			pop.render();
			return;
		}

		$('#pop_column_list').html('');
		(entry.getByBoard(currentBoard.id).filter(obj => {

			if ((obj.title).toUpperCase().indexOf(filter) > -1 && ['link', ''].indexOf(obj.type) > -1) {
				return true;
			}
			return false;

		})).forEach(function(eitem){
			

			let btn = $(`
				<div class="list-group-item entry-block">
					<a class="fullLi" href="${eitem.url}" target="_blank"></a>
					<div class="d-flex justify-content-between align-content-center">	     
						<div class="iconsleft pr-2 align-items-center d-flex">
							<img src="${eitem.favIconUrl}" height="15"></div>   
	           			<div class="flex1">
	              		<h5 class="mb-0 entryTitle text-truncate mt-3">${eitem.title}</h5>
	           		</div>
	        	</div>
	        `);

		   	btn.click(function(){
		   		chrome.tabs.create({url: eitem.url });
		   	});

			$('#pop_column_list').append(btn);
		});
	});



	$('#create-column-btn').click(function(){
		$('#add-column-container').show();
		$('#create-column-btn').hide();
		$('#column_inputbox').focus();
	})

	$('#column_inputbox').keyup(function(evt){

		if(evt.keyCode == 13) {

			$('#create-column-btn').show();
			$('#add-column-container').hide();
			let newColumn = board.createNewColumn($('#pop_choose_board').val(), { name: this.value});
			pop.render();
		}

		
	})
});




